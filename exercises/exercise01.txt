Programming Challenge: 1
Dated: 27th of July, 2025
=========================
* For all of the following exercises, the data should be taken as input from the user.
	- For example, for the first program, the Name, DOB, and Mobile should be input by the user.
* The output format (in the console) should match the expected output exactly.
* All programs should start with a comment stating, the name of the programmer and the date on which the code in written.
* The final source code (C files) should be submitted by email.

1. Print name, DOB, and mobile number

Objective:
Write a C program to print your name, date of birth, and mobile number.

Expected Output:

Name   : Alexandra Abramov  
DOB    : July 14, 1975  
Mobile : 99-9999999999


2. Print block 'F' and a large 'C'

Objective:
Write a C program to print a block F using the hash (#), where the F has a height of six characters and width of five and four characters. And also print a very large 'C'.

Expected Output:

######
#
#
#####
#
#
#

    ######
  ##      ##
 #
 #
 #
 #
 #
  ##      ##
    ######


3. Reverse characters ('X', 'M', 'L')

Objective:
Write a C program to print the following characters in reverse.

Each character must be stored in it's own variable. No user input needed.
Test Characters: 'X', 'M', 'L'
Expected Output:
The reverse of XML is LMX

4. Compute rectangle perimeter and area

Objective:
Write a C program to compute the perimeter and area of a rectangle with a height of 7 inches and width of 5 inches.

Expected Output:
Perimeter of the rectangle = 24 inches
Area of the rectangle = 35 square inches

5. Compute circle perimeter and area

Objective:
Write a C program to compute the perimeter and area of a circle with a given radius.

Expected Output:
Perimeter of the Circle = 37.680000 inches
Area of the Circle = 113.040001 square inches


6. Calculate sum of two integers

Objective:
Write a C program that accepts two integers from the user and calculates the sum of the two integers.

Test Data :
Input the first integer: 25
Input the second integer: 38
Expected Output:
Sum of the above two integers = 63

7. Calculate product of two integers

Objective:
Write a C program that accepts two integers from the user and calculates the product of the two integers.

Test Data :
Input the first integer: 25
Input the second integer: 15
Expected Output:
Product of the above two integers = 375 

8. Create a calculator

Objective:
Write a C program that takes two numbers and an operator (+, -, *, /) from the user.

Test Data:
Input the first integer: 5
Input the second integer: 10
Input the operator: *

Expected Output:
The output of 5 * 10 is 50

9. Conditionals on numbers

Objective:
Write a C program that acts as a "Number Detective". Your program will ask the user to enter a single whole number. 

Ask the user to enter a whole number.

Read the number and store it in an integer variable.

Write a series of if statements to check for the following properties.

	Is the number positive? If it's greater than 0, print "The number is positive."

	Is the number zero? If it's exactly 0, print "The number is zero."
	
	Is the number negative? If it's less than 0, print "The number is negative."

Expected Output:
Enter a whole number: 14
The number is positive.

10. Number comparision using operators

Objective:
Write a C program that acts as a "Comparator". Your program will ask the user to enter two different whole numbers. It will then use if statements and various comparison operators to tell you how these two numbers relate to each other.

Ask the user to enter the first whole number.

Read and store the first number.

Ask the user to enter the second whole number.

Read and store the second number.

Write a series of if statements to check for the following relationships between the two numbers. For each relationship that is true, print a specific message.

	Are they equal? If the first number is the same as the second number, print "The numbers are equal."

	Is the first number greater than the second? If the first number is larger than the second, print "The first number is greater than the second."

	Is the first number less than the second? If the first number is smaller than the second, print "The first number is less than the second."

	Are they NOT equal? If the first number is different from the second number, print "The numbers are not equal."

	Is the first number greater than or equal to the second? If the first number is the same as or larger than the second, print "The first number is greater than or equal to the second."

	Is the first number less than or equal to the second? If the first number is the same as or smaller than the second, print "The first number is less than or equal to the second."