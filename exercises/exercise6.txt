Programming Challenge: 6

Dated: 21st of August, 2025
=========================
0. Read all the rules below.
1. The output on cmd must match the Expected Output exactly.
2. All programs must start with a comment of program description.
3. Write solution logic in comments before writing the program in comments.
4. Make variable and function names meaningful. In other words, a variable name should tell the name of the value it holds. Write code as if it's going to be read by another human. Example:
	- number of players -> num_players
	- sum of odd numbers -> sum_odds
	- counter -> count or counter
	- rectangle area -> rect_area or rectangle_area
5. Write properly formatted code.
6. Use of ChatGPT or Google's Gemini (in google search) is not allowed for formulas or logic of the program. To find syntax solutions or advice or reading material use: https://duckduckgo.com/
7.	a. For every function that is used from the C library (such as stdio, math, etc.) write it's signature (input/output usage in comments before use). For example, the signature of the 'pow' function is:
	double pow(double base, double exponent);
	b. For every function you implement, write it's input and output in the comments inside the function definition. For example:
	int add_one(int number){
		// Input: int number
		// Output: int
		
		return number+1;
	}
8. Write each program step by step and make sure to check each step before updating the code.
9. The final source code (C files) should be .


*** HINT: Use paper and pencil to understand and write the logic BEFORE starting with the code.

==========================================================

51a. Convert binary to decimal

Take a binary number as input from the user and convert it to decimal. Maximum user input can be of length 8. User input must be a positive number.

(if needed) Use the strlen function from string.h library to verify the length.
Usage: strlen("Hello"); // returns 5 as result

Use the exit function from stdlib.h to exit the program if input conditions are not met.
Usage: exit(int); // exits the program when called

Test Data:
Input: 101011

Expected Output:
43


51b. Convert the code in 51a into a function that takes in a binary number and returns a decimal number. See point 4. at the top.

----------------------------------------------------------

52a. Convert decimal to binary

Take a decimal number as input from the user and convert it to binary. Maximum number the user can enter is 254. User input must be a positive number.

Hint: https://www.youtube.com/watch?v=H4BstqvgBow

Use the exit function from stdlib.h to exit the program if input conditions are not met.
Usage: exit(int); // exits the program when called

Test Data:
Input: 43

Expected Output:
101011


52b. Convert the code in 52a into a function that takes in a decimal number and returns a binary number. See point 4. at the top.

----------------------------------------------------------

53a. Print N alphabets starting from 'a' where N is an input from the user. The output needs to be comma seperated. The maximum value of N is 26 (as there are 26 alphabets). Exit the program in case the input is invalid.

Test Data:
Input: 5

Expected Output:
a, b, c, d, e


53b. Convert the code in 53a into a function. See point 4. at the top.

----------------------------------------------------------

54. Take three whole numbers as input from the user into variables called a, b, and c. Write a program to sort the numbers in ascending order such that variable a <= b <= c before the program finishes. In other words, the following line should print the variables and the output should be sorted:

printf("Num1: %d, Num2: %d, Num3: %d", a, b, c); //fixed order -- this line can not be changed

Test Data:
Input 1: 8
Input 2: 5
Input 3: 2

Expected Output:
Num1: 2, Num2: 5, Num3: 8

----------------------------------------------------------

55. Populate an array where each element is triple the previous

Write a C program to read and print the elements of an array with length 7. Before printing, insert the triple of the previous position, starting from the second position.
For example, if the first number is 2, the array numbers must be 2, 6, 18, 54 and 162

Test Data:
Input the first number of the array: 5

Expected Output:
n[0] = 5
n[1] = 15
n[2] = 45
n[3] = 135
n[4] = 405

----------------------------------------------------------

56. Print positions and values of elements in an array of length 5

Write a C program to read an array of length 5 and print the position and value of the array elements of value less than 5.

Test Data:
Input the 5 members of the array:
15
25
4
35
40

Expected Output:
A[2] = 4

----------------------------------------------------------

57. Reverse array elements by swapping positions

Write a C program to read an array of length 6, change the first element by the last, the second element by the fifth and the third element by the fourth. Print the elements of the modified array.

Test Data:
Input the 5 members of the array:
15
20
25
30
35

Expected Output:
array_n[0] = 35
array_n[1] = 30
array_n[2] = 25
array_n[3] = 20
array_n[4] = 15

----------------------------------------------------------

58. Find the smallest element in an array and its position

Write a C program to read an array of length 6 and find the smallest element and its position.

Test Data:
Input the length of the array: 5
Input the array elements:
25
35
20
14
45

Expected Output:
Smallest Value: 14
Position of the element: 3

----------------------------------------------------------

59a. Print a filled square of size nnn using #

Write a C program that reads the side (side sizes between 1 and 10 ) of a square and prints square using hash (#) character.

Test Data:
Input Size: 10

Expected Output:
 # # # # # # # # # #
 # # # # # # # # # #
 # # # # # # # # # #
 # # # # # # # # # #
 # # # # # # # # # #
 # # # # # # # # # #
 # # # # # # # # # #
 # # # # # # # # # #
 # # # # # # # # # #
 # # # # # # # # # #



59b. Update the program in  exercise 59a such that:

Test Data:
Input Size: 10

Expected Output:
 # # # # # # # # # #
 #                 #
 #                 #
 #                 #
 #                 #
 #                 #
 #                 #
 #                 #
 #                 #
 # # # # # # # # # #


----------------------------------------------------------

60. Reverse the digits of a number

Write a C program to reverse and print a given number.

Input a number:
The original number = 234

The reverse of the said number = 432